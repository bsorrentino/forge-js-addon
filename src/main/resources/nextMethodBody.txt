        if( nextCalls++ > 0 ) { // FIX ISSUE : MULTI INVOCATION
            return Results.navigateTo(JSEvalStep.class);
        }

        debug( context, "Eval.next" );
        
        final FileResource<?> js = script.getValue();
        
        final ForgeRhinoScriptEngine scriptEngine = super.getScriptEngine(context);

        scriptEngine.setContext(ScriptContextBuilder.create()
                .currentResource(js)
                .stdout(getOut(context).out())
                .stderr(getOut(context).err())
                .build());

        final File file = js.getUnderlyingResourceObject();
     
        try ( java.io.Reader r = new java.io.FileReader(file) ) {

            debug( context, "scriptEngine.eval(%%s)", js );

            final Object result =  scriptEngine.eval(r);

            debug( context, "scriptEngine.eval()=%%s", result );

        } catch (java.lang.LinkageError e) {
            error( context, "linkage error [%%s]", e.getMessage(), e);

        } catch (Exception e) {

            error( context, "exception [%%s]", e.getMessage(), e);

            throw e;
        }

        putAttribute(context, ScriptEngine.class.getName(), scriptEngine);
        putAttribute(context, "verbose", verbose.getValue());

        return Results.navigateTo(JSEvalStep.class);
